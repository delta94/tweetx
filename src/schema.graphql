# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(
    query: String
    first: Int
    after: String
    skip: Int
    orderBy: UserOrderByInput
  ): [User!]!
  me: User!
  posts: [Post!]!
  user(id: ID!): User!
  post(id: ID!): Post!
}

type Mutation {
  createUser(data: UserCreateInput!): AuthPayload!
  login(data: UserLoginInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UserUpdateInput!): User!
  createPost(data: PostCreateInput!): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: PostUpdateInput!): Post!
}

type AuthPayload {
  token: String!
  user: User!
}

input UserLoginInput {
  email: String!
  password: String!
}

input UserCreateInput {
  username: String!
  fullname: String!
  email: String!
  photoUrl: String
  password: String!
}

input UserUpdateInput {
  username: String
  fullname: String
  email: String
  photoUrl: String
  password: String
}

input PostCreateInput {
  content: String!
}

input PostUpdateInput {
  content: String
}

type User {
  id: ID!
  username: String!
  fullname: String!
  email: String!
  photoUrl: String
  password: String!
  createdAt: String!
  updatedAt: String!
}

type Post {
  id: ID!
  content: String!
  createdAt: String!
  updatedAt: String!
}

enum MutationType {
  CREATED
  DELETED
  UPDATED
}
